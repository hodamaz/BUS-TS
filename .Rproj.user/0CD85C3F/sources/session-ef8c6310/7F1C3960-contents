# DS4B 101-R: R FOR BUSINESS ANALYSIS ----
# JUMPSTART: First Analysis ----

# 1.0 Load libraries ----

# Work horse packages
library(tidyverse)
library(lubridate)

# theme_tq()
library(tidyquant)

# Excel Files
library(readxl)
library(writexl)


# 2.0 Importing Files ----

bikes_tbl <- read_excel(path = '00_data/bike_sales/data_raw/bikes.xlsx')
bikeshopes_tbl <- read_excel(path = '00_data/bike_sales/data_raw/bikeshops.xlsx')
orderlines_tbl <- read_excel(path = '00_data/bike_sales/data_raw/orderlines.xlsx')

# 3.0 Examining Data ----

## for wide data with many columns:

glimpse(bikes_tbl)
glimpse(bikeshopes_tbl)
glimpse(orderlines_tbl)

# 4.0 Joining Data ----
left_join(orderlines_tbl, bikes_tbl, 
          by = c('product.id' = 'bike.id'))
bike_orderlines_join_tbl <- orderlines_tbl %>% 
    left_join(bikes_tbl, by = c('product.id'='bike.id')) %>%
    left_join(bikeshopes_tbl, by = c('customer.id' = 'bikeshop.id'))

glimpse(bike_orderlines_join_tbl)
bikeshopes_tbl

## command + shift + m
# 5.0 Wrangling Data ----
bike_orderline_wrangled_tbl <- bike_orderlines_join_tbl %>%

    # separate description category into category.1, category.2, and frame.material
    separate(description, 
             into = c('category.1', 'category.2', 'frame.material'),
             sep = ' - ') %>%
    
    # Separate location into city and state
    separate(location,
             into = c('city', 'state'),
             sep  = ', ')%>%

    # Extended prince
    mutate(total.price = price * quantity)%>%
    
    # Reorganize
    select(-...1) %>%
    select(-ends_with('.id'))%>%
    
    bind_cols(bike_orderlines_join_tbl %>% 
                  select(order.id))%>%
    
    # Reorder columns
    select(contains('date'),contains('id'), contains('order'),
           quantity, price, total.price,
           everything())%>%
    
    # rename columns
    rename(order_date = order.date)%>%
    set_names(names(.)%>% str_replace_all('\\.', '_'))


# 6.0 Business Insights ----

# 6.1 Sales by Year ----

# Step 1 - Manipulate
sales_by_year_tbl <- bike_orderline_wrangled_tbl %>%
    
    # Selecting columns to focus on and adding a year columns
    select(order_date, total_price)%>%
    mutate(year = year(order_date))%>%
    
    # grouping by year, and summarizing sales 
    group_by(year)%>%
    summarize(sales = sum(total_price))%>%
    ungroup()%>%
    
    # $Format text
    mutate(sales_text = scales::dollar(sales))

sales_by_year_tbl

# Step 2 - Visualize
sales_by_year_tbl %>%
    
    # Setup canvas with year on x and sales on y
    ggplot(aes(year, sales)) + 

    # geometries use palette_...
    geom_col(fill = '#2C3E50')+
    
    # add labels 
    geom_label(aes(label = sales_text))+
    geom_smooth(method = 'lm', se = FALSE)+

    # Formatting
    theme_tq()+
    scale_y_continuous(labels = scales::dollar)+
    labs(
        title = 'Revenue by year',
        subtitle = 'Upward trend',
        x = '',
        y = 'Revenue'
    )

# 6.2 Sales by Year and Category 2 ----
sales_by_year_cat_2_tbl <- bike_orderline_wrangled_tbl %>% 
    
    # selecting columns and add year column
    select(order_date, total_price, category_2) %>% 
    mutate(year = year(order_date)) %>% 
    
    # Group by and summarize by year and category 2
    group_by(year, category_2) %>% 
    summarize(sales = sum(total_price)) %>% 
    ungroup() %>% 
    
    # format $ text
    mutate(saeles_text = scales::dollar(sales))

sales_by_year_cat_2_tbl

# Step 1 - Manipulate
sales_by_year_cat_2_tbl %>% 
    
    # set up x, y, fill
    ggplot(aes(year, sales, fill = category_2)) +
    
    # Geommetries
    geom_col() +
    geom_smooth(method = 'lm', se = FALSE) +

    # facet
    facet_wrap(~category_2, ncol = 3, scales = 'free_y') +

    # Formatting
    theme_tq() +
    scale_fill_tq() +
    scale_y_continuous(labels = scales::dollar) +
    labs(title = 'Revenue by year and category 2',
         subtitle = 'Each product category has an upward trend',
         x = '',
         y = 'Revenue',
         fill = 'Product secondary category')

# 7.0 Writing Files ----
fs::dir_create('00_data/bike_sales/data_wrangled_student')

# 7.1 Excel ----
bike_orderline_wrangled_tbl %>% 
    write_xlsx('00_data/bike_sales/data_wrangled_student/bike_orderlines.xlsx')

# 7.2 CSV ----
bike_orderline_wrangled_tbl %>% 
    write_csv('00_data/bike_sales/data_wrangled_student/bike_orderlines.csv')

# 7.3 RDS ----
# Format specific to R, you can save anything even a ggplot
bike_orderline_wrangled_tbl %>% 
    write_rds('00_data/bike_sales/data_wrangled_student/bike_orderlines.rds')

